<UserControl
    x:Class="GitOut.Features.Git.Log.GitLogPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:diff="clr-namespace:GitOut.Features.Git.Diff"
    xmlns:git="clr-namespace:GitOut.Features.Git"
    xmlns:details="clr-namespace:GitOut.Features.Git.Details"
    xmlns:files="clr-namespace:GitOut.Features.Git.Files"
    xmlns:local="clr-namespace:GitOut.Features.Git.Log"
    xmlns:text="clr-namespace:GitOut.Features.Text"
    xmlns:lc="clr-namespace:GitOut.Features.Git.Log.Converters"
    xmlns:converters="clr-namespace:GitOut.Features.Wpf.Converters"
    xmlns:attached="clr-namespace:GitOut.Features.Wpf.AttachedProperties"
    xmlns:progress="clr-namespace:GitOut.Features.Material.Progress"
    xmlns:scroll="clr-namespace:GitOut.Features.Wpf.Scrolling"
    xmlns:wpf="clr-namespace:GitOut.Features.Wpf"
    xmlns:wpfcommands="clr-namespace:GitOut.Features.Wpf.Commands"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance Type={x:Type local:GitLogViewModel}}"
    d:DesignHeight="450"
    d:DesignWidth="800"
>
    <UserControl.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
        <converters:UtcToLocalTimeConverter x:Key="UtcToLocalTimeConverter" />
        <converters:SubstringConverter x:Key="SubstringConverter" />
        <diff:DiffTypeToBrushConverter x:Key="DiffTypeToBrushConverter" />
        <files:FileEntryQueryMatcher x:Key="FileNameQueryMatcher" />
        <lc:TreeToMarginConverter x:Key="TreeToMarginConverter" />
        <lc:NodesToPathConverter x:Key="NodesToPathConverter" />
        <Canvas x:Key="IconCanvas" x:Shared="False" Width="24" Height="24">
            <Canvas.LayoutTransform>
                <ScaleTransform ScaleX=".8" ScaleY=".8" />
            </Canvas.LayoutTransform>
            <Path Fill="{DynamicResource MaterialForegroundIcon}" Data="{Binding IconResource, Converter={converters:StaticResourceConverter}}" />
        </Canvas>
        <ContextMenu x:Key="LogEventMenu">
            <MenuItem Header="Copy commit hash" Command="{Binding CopyCommitHashCommand}" CommandParameter="{Binding SelectedContext.Root.Event}" />
            <MenuItem Header="Copy subject" Command="{Binding CopySubjectCommand}" CommandParameter="{Binding SelectedContext}" />
            <Separator />
            <MenuItem Header="Copy branch name" ItemsSource="{Binding SelectedContext.Branches}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="{x:Type MenuItem}">
                        <Setter Property="Header" Value="{Binding Name}"/>
                        <Setter Property="Icon" Value="{StaticResource IconCanvas}" />
                        <Setter Property="Command" Value="{Binding CopyBranchNameCommand}"/>
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
        </ContextMenu>
        <Style x:Key="BranchStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CornerRadius" Value="4" />
            <Setter Property="Padding" Value="4 2" />
            <Setter Property="Margin" Value="0 0 4 0" />
            <Setter Property="TextElement.FontSize" Value="11" />
            <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialGray300}"/>
        </Style>
        <Style x:Key="GitLogListStyle" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{DynamicResource MaterialBackgroundBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource MaterialBackgroundBackground}"/>
            <Setter Property="FontFamily" Value="Roboto"/>
            <Setter Property="TextElement.FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <ControlTemplate.Resources>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="MinHeight" Value="28"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Foreground" Value="{DynamicResource MaterialGray100}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border
                                                x:Name="Bd"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}"
                                                SnapsToDevicePixels="True"
                                            >
                                                <ContentPresenter
                                                    Margin="{TemplateBinding Padding}"
                                                    TextElement.Foreground="{TemplateBinding Foreground}"
                                                    VerticalAlignment="Center"
                                                />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialGray800}"/>
                                        <Setter Property="Background" Value="{DynamicResource MaterialBackgroundHover}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource MaterialGray50}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialGray800}"/>
                                        <Setter Property="Background" Value="{DynamicResource MaterialBackgroundHover}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource MaterialGray50}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ControlTemplate.Resources>
                        <Border
                            x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            ContextMenu="{StaticResource LogEventMenu}"
                        >
                            <ScrollViewer
                                Padding="{TemplateBinding Padding}"
                                Focusable="False"
                                HorizontalScrollBarVisibility="Disabled"
                            >
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DiffViewStyle" TargetType="{x:Type ColumnDefinition}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=FileTree, Path=SelectedItem}" Value="{x:Null}">
                    <Setter Property="MaxWidth" Value="0"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding DataContext.FileViewVisible, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Value="False">
                    <Setter Property="MaxWidth" Value="0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FileViewStyle" TargetType="{x:Type ColumnDefinition}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding DataContext.FileViewVisible, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Value="False">
                    <Setter Property="MaxWidth" Value="0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="StashesViewStyle" TargetType="{x:Type ColumnDefinition}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding DataContext.IsStashesVisible, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Value="False">
                    <Setter Property="MaxWidth" Value="0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="Root">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Style="{StaticResource MaterialToolbarStyle}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Button
                    Style="{StaticResource MaterialButtonStyle}"
                    Command="{x:Static wpfcommands:Navigate.Back}"
                    ToolTip="Back"
                >
                    <Path Height="24" Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource ArrowLeft}"/>
                </Button>
                <progress:CircularProgressIndicator
                    Grid.Column="1"
                    ShowProgress="{Binding IsWorking}"
                    StrokeThickness="3"
                    Diameter="20"
                    Stroke="{DynamicResource MaterialForegroundBase}"
                />
                <TextBlock
                    Grid.Column="2"
                    Style="{StaticResource MaterialToolbarHeaderStyle}"
                    Text="{Binding Repository.Name}"
                />
            </Grid>

            <ToolBarTray Style="{StaticResource MaterialToolbarTrayStyle}" IsLocked="True">
                <ToolBar>
                    <ToolBar.Style>
                        <Style TargetType="{x:Type ToolBar}" BasedOn="{StaticResource MaterialToolBarStyle}">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ViewMode}" Value="Files">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToolBar.Style>
                    <Button ToolTip="Close details" Command="{Binding CloseDetailsCommand}">
                        <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource ArrowCollapseRight}"/>
                    </Button>
                    <Button ToolTip="Swap commits" Command="{Binding SwapCommitsCommand}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Foreground" Value="{DynamicResource MaterialForegroundBase}" />
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource MaterialGray400}" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Path Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" Data="{StaticResource SwapVerticalBold}"/>
                    </Button>
                    <ToggleButton IsChecked="{Binding IsSearchDisplayed}" ToolTip="Search file">
                        <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource FileSearch}"/>
                    </ToggleButton>
                    <ToggleButton IsChecked="{Binding ShowSpacesAsDots}" ToolTip="Show spaces as dots">
                        <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource CircleSmall}"/>
                    </ToggleButton>
                    <Separator Style="{StaticResource MaterialVerticalDivider}"/>
                    <TextBlock Style="{StaticResource ToolbarSecondaryTextStyle}" VerticalAlignment="Center" Text="Files" />
                    <ItemsControl Style="{StaticResource MaterialToggleButtonGroupStyle}">
                        <ToggleButton IsChecked="{Binding ShowRevisionAtCurrent}" ToolTip="Show current files as tree">
                            <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource FileTree}"/>
                        </ToggleButton>
                    </ItemsControl>
                    <Separator Style="{StaticResource MaterialVerticalDivider}"/>
                    <TextBlock Style="{StaticResource ToolbarSecondaryTextStyle}" VerticalAlignment="Center" Text="Diff" />
                    <ItemsControl Style="{StaticResource MaterialToggleButtonGroupStyle}">
                        <ToggleButton IsChecked="{Binding ShowRevisionDiff}" ToolTip="Show diff as tree">
                            <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource FileTree}"/>
                        </ToggleButton>
                        <ToggleButton IsChecked="{Binding ShowRevisionDiffInline}" ToolTip="Show diff as list">
                            <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource FormatListBullet}"/>
                        </ToggleButton>
                    </ItemsControl>
                </ToolBar>
                <ToolBar>
                    <Menu ToolBar.OverflowMode="AsNeeded">
                        <MenuItem ToolTip="Explorer">
                            <MenuItem.Icon>
                                <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource Folder}"/>
                            </MenuItem.Icon>
                            <MenuItem.Items>
                                <MenuItem Header="Reveal in Explorer" Command="{Binding RevealInExplorerCommand}">
                                    <MenuItem.Icon>
                                        <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource Folder}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="Copy path" Command="{Binding CopyContentCommand}">
                                    <MenuItem.Icon>
                                        <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource ContentCopy}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </MenuItem.Items>
                        </MenuItem>
                    </Menu>
                    <Separator />
                    <ToggleButton x:Name="Remotes" ToolBar.OverflowMode="Never" ToolTip="Remotes">
                        <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource DownloadNetworkOutline}"/>
                    </ToggleButton>
                    <Popup
                        ToolBar.OverflowMode="Never"
                        StaysOpen="False"
                        AllowsTransparency="True"
                        IsOpen="{Binding IsChecked, ElementName=Remotes}"
                        PopupAnimation="Fade"
                        Placement="Bottom"
                    >
                        <Grid>
                            <Border Style="{StaticResource CardPanelStyle}" MinWidth="200" Margin="16 8" Padding="0">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid Grid.Row="0" Margin="8 4">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Grid.Column="1">
                                            <Button
                                                Style="{StaticResource MaterialButtonStyle}"
                                                Command="{Binding FetchRemotesCommand}"
                                            >
                                                FETCH
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                    <Border Grid.Row="1" Style="{StaticResource MaterialHorizontalDivider}"/>
                                    <ListView
                                        Grid.Row="2"
                                        Style="{StaticResource MaterialListStyle}"
                                        ItemsSource="{Binding Remotes}"
                                    >
                                        <ListView.ItemTemplate>
                                            <DataTemplate DataType="{x:Type local:GitRemoteViewModel}">
                                                <ToggleButton IsChecked="{Binding IsSelected}" Style="{StaticResource MaterialListItemToggleButtonStyle}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="32" />
                                                            <ColumnDefinition Width="*" />
                                                        </Grid.ColumnDefinitions>
                                                        <Canvas Width="24" Height="24">
                                                            <Canvas.LayoutTransform>
                                                                <ScaleTransform ScaleX=".8" ScaleY=".8" />
                                                            </Canvas.LayoutTransform>
                                                            <Path
                                                                Fill="{DynamicResource MaterialForegroundBase}"
                                                                Data="{StaticResource CheckBold}"
                                                                HorizontalAlignment="Center"
                                                                Visibility="{Binding IsSelected, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                            />
                                                        </Canvas>
                                                        <TextBlock
                                                            Grid.Column="1"
                                                            Text="{Binding Name}"
                                                            Style="{StaticResource NormalTextStyle}"
                                                            VerticalAlignment="Center"
                                                        />
                                                    </Grid>
                                                </ToggleButton>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </Grid>
                            </Border>
                        </Grid>
                    </Popup>
                    <ToggleButton IsChecked="{Binding IsCheckoutBranchVisible}" ToolTip="Checkout branch">
                        <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource SourceBranchPlus}"/>
                    </ToggleButton>
                    <Popup
                        StaysOpen="False"
                        AllowsTransparency="True"
                        IsOpen="{Binding IsCheckoutBranchVisible}"
                        PopupAnimation="Fade"
                        Placement="Bottom"
                    >
                        <Grid>
                            <Border Style="{StaticResource CardPanelStyle}" MinWidth="400" Margin="16 8" Padding="16">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox
                                        Style="{StaticResource MaterialInputStyle}"
                                        AutomationProperties.HelpText="Branch name"
                                        Text="{Binding CheckoutBranchName, UpdateSourceTrigger=PropertyChanged}"
                                    />
                                    <StackPanel VerticalAlignment="Top" Grid.Column="1">
                                        <Button
                                            Style="{StaticResource MaterialButtonStyle}"
                                            Content="SWITCH"
                                            Command="{Binding CheckoutBranchCommand}"
                                        />
                                    </StackPanel>
                                    <TextBlock Grid.Row="1" Style="{StaticResource HintTextStyle}" Text="Branch will be created from HEAD"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Popup>
                    <ToggleButton ToolBar.OverflowMode="AsNeeded" IsChecked="{Binding IsStashesVisible}" ToolTip="View stashes">
                        <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource Inbox}"/>
                    </ToggleButton>
                    <ToggleButton x:Name="ViewOptions" ToolBar.OverflowMode="Never" ToolTip="View options">
                        <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource TuneVerticalVariant}"/>
                    </ToggleButton>
                    <Popup
                        ToolBar.OverflowMode="Never"
                        StaysOpen="False"
                        AllowsTransparency="True"
                        IsOpen="{Binding IsChecked, ElementName=ViewOptions}"
                        PopupAnimation="Fade"
                        Placement="Bottom"
                    >
                        <Grid>
                            <Border Style="{StaticResource CardPanelStyle}" MinWidth="180" Margin="16 8" Padding="0">
                                <StackPanel Margin="8 16">
                                    <CheckBox Style="{StaticResource MaterialCheckBoxStyle}" IsChecked="{Binding IncludeStashes}">
                                        <StackPanel Orientation="Horizontal">
                                            <Canvas Width="24" Height="24" Margin="0 0 3 0">
                                                <Canvas.LayoutTransform>
                                                    <ScaleTransform ScaleX=".8" ScaleY=".8" />
                                                </Canvas.LayoutTransform>
                                                <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource ArchiveEye}"/>
                                            </Canvas>
                                            <TextBlock Text="Include Stashes" />
                                        </StackPanel>
                                    </CheckBox>
                                    <Border Grid.Row="1" Style="{StaticResource MaterialHorizontalDivider}"/>
                                    <CheckBox Style="{StaticResource MaterialCheckBoxStyle}" IsChecked="{Binding IncludeRemotes}">
                                        <StackPanel Orientation="Horizontal">
                                            <Canvas Width="24" Height="24" Margin="0 0 3 0">
                                                <Canvas.LayoutTransform>
                                                    <ScaleTransform ScaleX=".8" ScaleY=".8" />
                                                </Canvas.LayoutTransform>
                                                <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource CheckNetwork}"/>
                                            </Canvas>
                                            <TextBlock Text="Include Remotes" />
                                        </StackPanel>
                                    </CheckBox>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </Popup>
                    <Button
                        ToolBar.OverflowMode="Never"
                        Command="{Binding RefreshStatusCommand}"
                        ToolTip="Refresh log tree"
                    >
                        <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource Refresh}"/>
                    </Button>
                    <Separator Style="{StaticResource MaterialVerticalDivider}"/>
                    <Button
                        ToolBar.OverflowMode="Never"
                        Command="{Binding NavigateToStageAreaCommand}"
                        ToolTip="Open stage area"
                    >
                        <Grid>
                            <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource FilePlus}"/>
                            <Border Style="{StaticResource BadgeStyle}">
                                <TextBlock Style="{StaticResource BadgeTextStyle}" Text="{Binding ChangesCount}" />
                            </Border>
                        </Grid>
                    </Button>
                </ToolBar>
            </ToolBarTray>
        </Grid>
        <Grid
            Grid.Row="1"
            Style="{StaticResource LayoutRootGridStyle}"
            wpf:GridSplitterBehavior.FreezeColumn="0"
        >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" Style="{StaticResource StashesViewStyle}" />
                <ColumnDefinition Width="Auto" Style="{StaticResource StashesViewStyle}" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="Auto" Style="{StaticResource FileViewStyle}" />
                <ColumnDefinition Width="5*" Style="{StaticResource FileViewStyle}" />
                <ColumnDefinition Width="Auto" Style="{StaticResource DiffViewStyle}" />
                <ColumnDefinition Width="5*" Style="{StaticResource DiffViewStyle}" />
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Style="{StaticResource MaterialToolbarStyle}">
                    <TextBlock Style="{StaticResource MaterialToolbarHeaderStyle}" Text="Stashes" />
                </Grid>
                <ListView
                    Grid.Row="1"
                    Style="{StaticResource MaterialListStyle}"
                    ItemsSource="{Binding ActiveStashes}"
                    attached:BindableSelectedItems.SelectedItems="{Binding SelectedLogEntries}"
                >
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Padding" Value="8 0" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                            <Setter Property="Foreground" Value="{DynamicResource MaterialForegroundBase}" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="{x:Type local:GitTreeEvent}">
                            <Grid Margin="0 4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto" MinWidth="20"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Path Margin="0 0 8 0" Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource Inbox}"/>
                                <TextBlock Grid.Column="1" FontSize="10" VerticalAlignment="Center">
                                    <Run Text="{Binding StashIndex, Mode=OneWay, StringFormat={}{0}:}" />
                                </TextBlock>
                                <TextBlock Grid.Column="2" Style="{StaticResource NormalTextStyle}" VerticalAlignment="Center">
                                    <Run Text="{Binding Event.Subject, Mode=OneWay}"/>
                                </TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
            <GridSplitter Grid.Column="1" Style="{StaticResource SplitVerticalStyle}" />
            <Grid Grid.Column="2">
                <ListView
                    ItemsSource="{Binding Entries}"
                    Style="{StaticResource GitLogListStyle}"
                    attached:BindableSelectedItems.SelectedItems="{Binding SelectedLogEntries}"
                    scroll:ScrollBehavior.EnsureInView="{Binding EntryInView}"
                >
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                            <Setter Property="Foreground" Value="{DynamicResource MaterialForegroundBase}" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="{x:Type local:GitTreeEvent}">
                            <Grid x:Name="outerGrid" Height="28">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <ItemsControl>
                                        <ItemsControl.ItemsSource>
                                            <MultiBinding Converter="{StaticResource NodesToPathConverter}">
                                                <Binding Path="Nodes" />
                                                <Binding Path="Height" ElementName="outerGrid" />
                                            </MultiBinding>
                                        </ItemsControl.ItemsSource>
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Grid>
                                <Grid
                                    Grid.Column="1"
                                    Margin="{Binding DataContext, ElementName=outerGrid, Converter={StaticResource TreeToMarginConverter}}"
                                >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.Style>
                                        <Style TargetType="{x:Type Grid}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Event.IsHead}" Value="True">
                                                    <Setter Property="Background" Value="#44000000" />
                                                    <Setter Property="TextElement.FontWeight" Value="Bold" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                    <ItemsControl
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        ItemsSource="{Binding Event.Branches}"
                                    >
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Border
                                                    Style="{StaticResource BranchStyle}"
                                                    BorderBrush="{Binding DataContext.CommitBrush, RelativeSource={RelativeSource AncestorType=Grid}}"
                                                >
                                                    <StackPanel Orientation="Horizontal">
                                                        <Canvas Grid.Column="1" Width="24" Height="24" Margin="0 0 4 0">
                                                            <Canvas.Style>
                                                                <Style TargetType="{x:Type Canvas}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding DataContext.StashIndex, ElementName=outerGrid}" Value="-1">
                                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Canvas.Style>
                                                            <Canvas.LayoutTransform>
                                                                <ScaleTransform ScaleX=".6" ScaleY=".6" />
                                                            </Canvas.LayoutTransform>
                                                            <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource Inbox}"/>
                                                        </Canvas>
                                                        <TextBlock Text="{Binding Name}"/>
                                                    </StackPanel>
                                                </Border>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>

                                    <TextBlock
                                        Grid.Column="1"
                                        Text="{Binding Event.Subject, Mode=OneWay}"
                                        VerticalAlignment="Center"
                                        TextTrimming="CharacterEllipsis"
                                    />
                                    <TextBlock
                                        Grid.Column="2"
                                        VerticalAlignment="Center"
                                        FontSize="10"
                                        Visibility="{Binding DataContext.FileViewVisible, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                    >
                                        <Run Text="{Binding Event.Author.Name, Mode=OneWay}" ToolTip="{Binding Event.Author.Email}" />
                                        <Run Text="{Binding Event.Id.Hash, Mode=OneWay, Converter={StaticResource SubstringConverter}, ConverterParameter=7}" />
                                        <Run Text="{Binding Event.AuthorDate, Mode=OneWay, StringFormat={}{0:F}, Converter={StaticResource UtcToLocalTimeConverter}}" />
                                    </TextBlock>
                                    <TextBlock
                                        Grid.Column="2"
                                        VerticalAlignment="Center"
                                        FontSize="10"
                                        Visibility="{Binding DataContext.FileViewVisible, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                    >
                                        <Run Text="{Binding Event.Author.Name, Mode=OneWay}" ToolTip="{Binding Event.Author.Email}" />
                                        <Run Text="{Binding Event.AuthorDate, Mode=OneWay, StringFormat={}{0:HH:mm}, Converter={StaticResource UtcToLocalTimeConverter}}" ToolTip="{Binding Event.AuthorDate, Mode=OneWay, StringFormat={}{0:F}, Converter={StaticResource UtcToLocalTimeConverter}}" />
                                    </TextBlock>
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
            <GridSplitter
                Grid.Column="3"
                Style="{StaticResource SplitVerticalStyle}"
                Visibility="{Binding FileViewVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
            />
            <Grid
                Grid.Column="4"
                Visibility="{Binding FileViewVisible, Converter={StaticResource BooleanToVisibilityConverter}}"
            >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <ItemsControl ItemsSource="{Binding SelectedLogEntries}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Rows="1" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type git:GitHistoryEvent}">
                            <details:GitHistoryEventDetails
                                GitHistoryEvent="{Binding Event}"
                                CopyHashCommand="{Binding DataContext.CopyCommitHashCommand, RelativeSource={RelativeSource AncestorType={x:Type local:GitLogPage}}}"
                                SelectCommitCommand="{Binding DataContext.SelectCommitCommand, RelativeSource={RelativeSource AncestorType={x:Type local:GitLogPage}}}"
                                AppendSelectCommitCommand="{Binding DataContext.AppendSelectCommitCommand, RelativeSource={RelativeSource AncestorType={x:Type local:GitLogPage}}}"
                            />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <local:GitFileTree
                    x:Name="FileTree"
                    Grid.Row="1"
                    RootFiles="{Binding SelectedContext.RootFiles, Mode=OneWay}"
                    SelectedItem="{Binding SelectedContext.SelectedItem, Mode=TwoWay}"
                />
                <Popup
                    AllowsTransparency="True"
                    IsOpen="{Binding IsSearchDisplayed}"
                    PopupAnimation="None"
                    Placement="Left"
                >
                    <Border Style="{StaticResource CardPanelStyle}" Margin="16" MinWidth="280" MaxHeight="800">
                        <text:Autocomplete
                            Header="Filename"
                            ItemsSource="{Binding SelectedContext.AllFiles}"
                            QueryMatcher="{StaticResource FileNameQueryMatcher}"
                            CancelCommand="{Binding CloseAutocompleteCommand}"
                            ItemSelectedCommand="{Binding SelectedContext.SelectFileCommand}"
                        >
                            <text:Autocomplete.ItemTemplate>
                                <DataTemplate DataType="{x:Type git:GitFileEntry}">
                                    <TextBlock Text="{Binding FileName}" Style="{StaticResource NormalTextStyle}" />
                                </DataTemplate>
                            </text:Autocomplete.ItemTemplate>
                        </text:Autocomplete>
                    </Border>
                </Popup>
            </Grid>
            <GridSplitter Grid.Column="5" Style="{StaticResource SplitVerticalStyle}" />
            <Grid Grid.Column="6">
                <ContentPresenter Content="{Binding ElementName=FileTree, Path=SelectedItem, FallbackValue=Nothing}">
                    <ContentPresenter.Resources>
                        <DataTemplate DataType="{x:Type files:GitFileViewModel}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid Style="{StaticResource MaterialToolbarStyle}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Style="{StaticResource MaterialToolbarHeaderStyle}" Text="{Binding FileName}" />
                                    <Canvas Grid.Column="1" Width="24" Height="24" Margin="0 0 8 0" ToolTip="{Binding Status}">
                                        <Canvas.LayoutTransform>
                                            <ScaleTransform ScaleX=".6" ScaleY=".6" />
                                        </Canvas.LayoutTransform>
                                        <Path
                                            Fill="{Binding Status, Converter={StaticResource DiffTypeToBrushConverter}}"
                                            Data="{Binding IconResourceKey, Converter={converters:StaticResourceConverter}}"
                                        />
                                    </Canvas>
                                </Grid>
                                <diff:GitDiffControl
                                    Grid.Row="1"
                                    Diff="{Binding DiffResult}"
                                    ShowSpacesAsDots="{Binding DataContext.ShowSpacesAsDots, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type local:GitLogPage}}}"
                                    HorizontalAlignment="Stretch"
                                />
                            </Grid>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type files:GitDirectoryViewModel}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Grid Style="{StaticResource MaterialToolbarStyle}">
                                    <TextBlock Style="{StaticResource MaterialToolbarHeaderStyle}" Text="{Binding FileName}" />
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </ContentPresenter.Resources>
                </ContentPresenter>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
