<UserControl
    x:Class="GitOut.Features.Git.Log.GitLogPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:git="clr-namespace:GitOut.Features.Git"
    xmlns:local="clr-namespace:GitOut.Features.Git.Log"
    xmlns:files="clr-namespace:GitOut.Features.Git.Files"
    xmlns:lc="clr-namespace:GitOut.Features.Git.Log.Converters"
    xmlns:converters="clr-namespace:GitOut.Features.Wpf.Converters"
    xmlns:wpf="clr-namespace:GitOut.Features.Wpf"
    mc:Ignorable="d" 
    d:DataContext="{d:DesignInstance Type={x:Type local:GitLogViewModel}}"
    d:DesignHeight="450"
    d:DesignWidth="800"
>
    <UserControl.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:BooleanToFontWeightConverter x:Key="BooleanToFontWeightConverter" />
        <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
        <converters:UtcToLocalTimeConverter x:Key="UtcToLocalTimeConverter" />
        <lc:TreeToMarginConverter x:Key="TreeToMarginConverter" />
        <lc:TreeNodePathDataConverter x:Key="TreeNodePathDataConverter" />
        <ContextMenu x:Key="LogEventMenu">
            <MenuItem Header="Copy commit hash" Command="{Binding CopyCommitHashCommand}" />
        </ContextMenu>
        <Style x:Key="BranchStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueLightBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CornerRadius" Value="4" />
            <Setter Property="Padding" Value="4 1" />
            <Setter Property="Margin" Value="0 0 4 0" />
            <Setter Property="TextElement.FontSize" Value="12" />
            <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialGray50}"/>
        </Style>
        <Style x:Key="GitLogListStyle" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{DynamicResource MaterialBackgroundBackground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource MaterialBackgroundBackground}"/>
            <Setter Property="FontFamily" Value="Roboto"/>
            <Setter Property="TextElement.FontSize" Value="12"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <ControlTemplate.Resources>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Setter Property="MinHeight" Value="28"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Foreground" Value="{DynamicResource MaterialGray100}"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border
                                                x:Name="Bd"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}"
                                                SnapsToDevicePixels="True"
                                            >
                                                <ContentPresenter 
                                                    Margin="{TemplateBinding Padding}"
                                                    TextElement.Foreground="{TemplateBinding Foreground}"
                                                    VerticalAlignment="Center"
                                                />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialGray800}"/>
                                        <Setter Property="Background" Value="{DynamicResource MaterialBackgroundHover}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource MaterialGray50}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="{DynamicResource MaterialGray800}"/>
                                        <Setter Property="Background" Value="{DynamicResource MaterialBackgroundHover}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource MaterialGray50}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ControlTemplate.Resources>
                        <Border
                            x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            ContextMenu="{StaticResource LogEventMenu}"
                        >
                            <ScrollViewer
                                Padding="{TemplateBinding Padding}"
                                Focusable="False"
                                HorizontalScrollBarVisibility="Disabled"
                            >
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FileViewStyle" TargetType="{x:Type ColumnDefinition}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding DataContext.FileViewVisible, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Value="False">
                    <Setter Property="MaxWidth" Value="0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="StashesViewStyle" TargetType="{x:Type ColumnDefinition}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding DataContext.IsStashesVisible, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Value="False">
                    <Setter Property="MaxWidth" Value="0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid
            Grid.Row="1"
            Style="{StaticResource LayoutRootGridStyle}"
            wpf:GridSplitterBehavior.FreezeColumn="0"
        >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" Style="{StaticResource StashesViewStyle}" />
                <ColumnDefinition Width="Auto" Style="{StaticResource StashesViewStyle}" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="Auto" Style="{StaticResource FileViewStyle}" />
                <ColumnDefinition Width="5*" Style="{StaticResource FileViewStyle}" />
            </Grid.ColumnDefinitions>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid Style="{StaticResource MaterialToolbarStyle}">
                    <TextBlock Style="{StaticResource MaterialToolbarHeaderStyle}" Text="Stashes" />
                </Grid>
                <ListView
                    Grid.Row="1"
                    Style="{StaticResource MaterialListStyle}"
                    ItemsSource="{Binding ActiveStashes}"
                >
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="{x:Type git:GitStash}">
                            <StackPanel Margin="0 4">
                                <TextBlock Style="{StaticResource PrimaryTextStyle}" Margin="0">
                                    <Run Text="{Binding StashIndex, Mode=OneWay, StringFormat={}{{ {0} }}:}" />
                                    <Run Text="{Binding FromNode, Mode=OneWay}" FontSize="11" Foreground="{DynamicResource MaterialGray400}" />
                                </TextBlock>
                                <TextBlock Style="{StaticResource SecondaryTextStyle}" FontSize="12"  Text="{Binding FromParent}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
            <GridSplitter Grid.Column="1" Style="{StaticResource SplitVerticalStyle}" />
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Style="{StaticResource MaterialToolbarStyle}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Style="{StaticResource MaterialToolbarHeaderStyle}" Text="{Binding Repository.Name}"/>
                    <StackPanel Grid.Column="1" Style="{StaticResource MaterialToolbarOptionsStyle}">
                        <ToggleButton Style="{StaticResource MaterialIconToggleButtonStyle}" IsChecked="{Binding IsStashesVisible}" ToolTip="View stashes">
                            <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource Inbox}"/>
                        </ToggleButton>
                        <Border Style="{StaticResource MaterialVerticalDivider}"/>
                        <ToggleButton Style="{StaticResource MaterialIconToggleButtonStyle}" IsChecked="{Binding IncludeRemotes}" ToolTip="Show remotes">
                            <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource CheckNetwork}"/>
                        </ToggleButton>
                        <Border Style="{StaticResource MaterialVerticalDivider}"/>
                        <Button
                    Style="{StaticResource MaterialIconButtonStyle}"
                    Command="{Binding RefreshStatusCommand}"
                    ToolTip="Refresh"
                >
                            <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource FolderRefresh}"/>
                        </Button>
                        <Button
                    Style="{StaticResource MaterialIconButtonStyle}"
                    Command="{Binding NavigateToStageAreaCommand}"
                    ToolTip="Open stage area"
                >
                            <Grid>
                                <Path Fill="{DynamicResource MaterialForegroundBase}" Data="{StaticResource FilePlus}"/>
                                <Border Style="{StaticResource BadgeStyle}">
                                    <TextBlock Style="{StaticResource BadgeTextStyle}" Text="{Binding ChangesCount}" />
                                </Border>
                            </Grid>
                        </Button>
                    </StackPanel>
                </Grid>
                <ListView
                    Grid.Row="1"
                    ItemsSource="{Binding Entries}"
                    Style="{StaticResource GitLogListStyle}"
                    SelectedValue="{Binding SelectedLogEntry}"
                >
                    <ListView.ItemTemplate>
                        <DataTemplate DataType="{x:Type local:GitTreeEvent}">
                            <Grid x:Name="outerGrid" Height="28">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid>
                                    <ItemsControl ItemsSource="{Binding Nodes}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Canvas />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Path
                                                    Fill="Transparent"
                                                    StrokeThickness="2"
                                                    Height="28"
                                                    Stroke="{Binding Color, Converter={StaticResource ColorToBrushConverter}}"
                                                >
                                                    <Path.Data>
                                                        <MultiBinding Converter="{StaticResource TreeNodePathDataConverter}">
                                                            <Binding Path="." />
                                                            <Binding Path="ActualHeight" ElementName="outerGrid" />
                                                        </MultiBinding>
                                                    </Path.Data>
                                                </Path>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Grid>
                                <Grid
                                    Grid.Column="1"
                                    Margin="{Binding DataContext, ElementName=outerGrid, Converter={StaticResource TreeToMarginConverter}}"
                                    DataContext="{Binding Event}"
                                >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ItemsControl
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        ItemsSource="{Binding Branches}"
                                    >
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Border Style="{StaticResource BranchStyle}">
                                                    <TextBlock Text="{Binding Name}"/>
                                                </Border>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>

                                    <TextBlock
                                        Grid.Column="1"
                                        FontWeight="{Binding IsHead, Converter={StaticResource BooleanToFontWeightConverter}}"
                                        Text="{Binding Subject, Mode=OneWay}"
                                        VerticalAlignment="Center"
                                        TextTrimming="CharacterEllipsis"
                                    />
                                    <TextBlock
                                        Grid.Column="2"
                                        VerticalAlignment="Center"
                                        Visibility="{Binding DataContext.FileViewVisible, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=True, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                    >
                                    <Run Text="{Binding Author.Name, Mode=OneWay}" />
                                    <Run Text="{Binding Author.Email, Mode=OneWay}" />
                                    <Run Text="{Binding AuthorDate, Mode=OneWay, StringFormat={}{0:F}, Converter={StaticResource UtcToLocalTimeConverter}}" />
                                    </TextBlock>
                                </Grid>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
            <GridSplitter Grid.Column="3" Style="{StaticResource SplitVerticalStyle}" />
            <Grid Grid.Column="4">
                <TreeView ItemsSource="{Binding RootFiles}" Style="{StaticResource MaterialTreeViewStyle}">
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type files:GitDirectoryViewModel}" ItemsSource="{Binding Children}">
                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                <Canvas Width="24" Height="24" Margin="0 0 3 0">
                                    <Canvas.LayoutTransform>
                                        <ScaleTransform ScaleX=".6" ScaleY=".6" />
                                    </Canvas.LayoutTransform>
                                    <Path
                                        Fill="{DynamicResource MaterialForegroundBase}"
                                        Data="{Binding IconResourceKey, Converter={converters:StaticResourceConverter}}"
                                    />
                                </Canvas>
                                <TextBlock Text="{Binding FileName}" />
                            </StackPanel>
                        </HierarchicalDataTemplate>
                        <DataTemplate DataType="{x:Type files:GitFileViewModel}">
                            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                <Canvas Width="24" Height="24" Margin="0 0 3 0">
                                    <Canvas.LayoutTransform>
                                        <ScaleTransform ScaleX=".6" ScaleY=".6" />
                                    </Canvas.LayoutTransform>
                                    <Path
                                        Fill="{DynamicResource MaterialForegroundBase}"
                                        Data="{Binding IconResourceKey, Converter={converters:StaticResourceConverter}}"
                                    />
                                </Canvas>
                                <TextBlock Text="{Binding FileName}" />
                            </StackPanel>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type files:LoadingViewModel}">
                            <Canvas Style="{StaticResource SpinIconStyle}">
                                <Path
                                    Fill="{StaticResource MaterialForegroundBase}"
                                    Data="{StaticResource SourceCommitLocal}"
                                />
                            </Canvas>
                        </DataTemplate>
                    </TreeView.Resources>
                </TreeView>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
